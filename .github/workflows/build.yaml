name: Build MovieReview Website

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3

    - name: Restore NuGet packages
      run: nuget restore src/MovieReview-Angular/MovieReview.Web.sln

    - name: Build and publish
      run: msbuild src/MovieReview-Angular/MovieReview.Web/MovieReview.Web.csproj /p:Configuration=Release /p:DeployOnBuild=true /p:OutputPath=publish/

    - name: Upload published output
      uses: actions/upload-artifact@v4
      with:
        name: PublishedOutput
        path: src/MovieReview-Angular/MovieReview.Web/obj/Release/Package/PackageTmp/**

  docker:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Checkout repo (for Dockerfile)
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: PublishedOutput
          path: artifact_zip
      
      - name: List downloaded files
        shell: pwsh
        run: Get-ChildItem -Recurse artifact_zip
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set version tag
        id: vars
        run: |
          $timestamp = Get-Date -Format "yyyyMMdd-HHmmss"
          $sha = (git rev-parse --short HEAD)
          echo "VERSION_TAG=$timestamp-$sha" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      
      - name: Build Docker image
        shell: pwsh
        run: docker build -f docker/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/moviereview:latest -t ${{ secrets.DOCKER_USERNAME }}/myapp:${{ env.VERSION_TAG }} .

      - name: Verify image built successfully
        run: docker images

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/moviereview:latest



